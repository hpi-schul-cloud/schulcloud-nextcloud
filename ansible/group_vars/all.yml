kubeconfig: ~/.kube/config
project: sc

kubectl_version: "{{ kubernetes_version }}"
get_kubectl_command: |
  curl -LO https://dl.k8s.io/release/v{{ kubectl_version }}/bin/linux/amd64/kubectl
  chmod +x kubectl
  mv ./kubectl /usr/local/bin/kubectl
kubernetes_version: 1.22.16

s3_region_berlin: eu-central-2
s3_url_berlin: https://s3-eu-central-2.ionoscloud.com

nextcloud_chart_version: 2.13.2
nextcloud_secret_name: nextcloud
nextcloud_postgresql_pvc_name: nextcloud-postgresql-pvc
nextcloud_postgresql_pvc_size: 15Gi
nextcloud_pvc_size: 10Gi
nextcloud_data_pvc_size: 10Gi
nextcloud_install_plugins: "groupfolders theming_customcss richdocuments"
nextcloud_external_archive_plugins: "https://github.com/hpi-schul-cloud/user_oidc/releases/download/v1.3.0-alpha/user_oidc-v1.3.0-alpha.tar.gz:user_oidc"
nextcloud_enable_plugins: "schulcloud extract theming user_oidc"
nextcloud_disable_plugins: "accessibility activity circles comments contactsinteraction contactsinteraction dashboard files_sharing firstrunwizard password_policy photos privacy nextcloud_announcements recommendations sharebymail support survey_client systemtags sociallogin notifications updatenotification user_status weather_status"
nextcloud_external_git_plugins: "https://github.com/hpi-schul-cloud/NextcloudExtract.git:extract:1.3.7 https://github.com/hpi-schul-cloud/schulcloud-nextcloud-app.git:schulcloud:0.1.9"
nextcloud_post_config_command: 'sudo -u www-data PHP_MEMORY_LIMIT=512M php occ user_oidc:provider SchulcloudNextcloud --clientid="{{ socialloginClientId }}" --clientsecret="{{ socialloginSecret }}" --check-bearer="1" --unique-uid="0" --scope="openid offline profile email groups" --discoveryuri="https://{{ item.hydraUrl }}/.well-known/openid-configuration"'
nextcloud_image_repository: schulcloud/schulcloud-nextcloud
nextcloud_postgresql_image_tag: 11.17.0-debian-11-r37
nextcloud_values:
  image:
    repository: "{{ nextcloud_image_repository }}"
    tag: "{{ nextcloud_image_tag }}"
    pullPolicy: Always
  resources:
    "{{ nextcloud_resources }}"
  lifecycle:
    postStartCommand: ["/bin/sh", "-c", "/usr/nextcloud/configure.sh > /usr/nextcloud/configure_output"]
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: sc-cert-manager-clusterissuer-letsencrypt
      nginx.ingress.kubernetes.io/client-max-body-size: "1G"
      nginx.ingress.kubernetes.io/proxy-body-size: "1G"
      nginx.ingress.kubernetes.io/rewrite-target: /
    tls:
    - secretName: nextcloud-tls
      hosts:
      - "{{ item.nextcloud_hostname }}"
  nextcloud:
    host: "{{ item.nextcloud_hostname }}"
    existingSecret:
      enabled: true
      secretName: "{{ nextcloud_secret_name }}"
      usernameKey: username
      passwordKey: password
    extraEnv:
    - name: INSTALL_PLUGINS
      value: "{{ nextcloud_install_plugins }}"
    - name: ENABLE_PLUGINS
      value: "{{ nextcloud_enable_plugins }}"
    - name: DISABLE_PLUGINS
      value: "{{ nextcloud_disable_plugins }}"
    - name: RUN_CONFIGURATION
      value: "{%if run_nextcloud_configuration is defined%}{{ run_nextcloud_configuration | string}}{%else%}false{%endif%}"
    - name: EXTERNAL_GIT_PLUGINS
      value: "{{ nextcloud_external_git_plugins }}"
    - name: CONFIG_JSON
      value: "{{ lookup('template', './templates/nextcloud_config_values') | to_json }}"
    - name: PHP_MEMORY_LIMIT
      value: 8192M
    - name: OBJECTSTORE_S3_BUCKET
      value: "{{ nextcloud_objectstore_s3_bucket_name }}"
    - name: OBJECTSTORE_S3_KEY
      valueFrom:
        secretKeyRef:
          name: "{{ nextcloud_secret_name }}"
          key: s3_access_key
    - name: OBJECTSTORE_S3_SECRET
      valueFrom:
        secretKeyRef:
          name: "{{ nextcloud_secret_name }}"
          key: s3_access_secret
    - name: OBJECTSTORE_S3_HOST
      value: "{{ nextcloud_objectstore_s3_host }}"
    - name: OBJECTSTORE_S3_REGION
      value: "{{ nextcloud_objectstore_s3_region }}"
    - name: OBJECTSTORE_S3_AUTOCREATE
      value: "false"
    - name: OBJECTSTORE_S3_USEPATH_STYLE
      value: "true"
    - name: OBJECTSTORE_S3_LEGACYAUTH
      value: "true"
    - name: THEMING_NAME
      value: Schulcloud Nextcloud
    - name: THEMING_URL
      value: https://{{ nbc_nextcloud_hostname }}/
    - name: THEMING_SLOGAN
      value: "{{ item.nextcloud_theming_slogan }}"
    - name: THEMING_COLOR
      value:  "{{ item.nextcloud_theming_color }}"
    - name: THEMING_LOGO_URL
      value:  "{{ item.nextcloud_theming_logo_url }}"
  metrics:
    enabled: true
    https: true
    # necessary to avoid admin users of nextcloud to be added to the db again
  persistence:
    enabled: true
    size: "{{ nextcloud_pvc_size }}"
    nextcloudData:
      enabled: true
      size: "{{ nextcloud_data_pvc_size }}"
  internalDatabase:
    enabled: false
  # used by nextcloud to connect to db
  externalDatabase:
    enabled: true
    type: postgresql
    host: nextcloud-postgresql.{{ item.namespace }}.svc.cluster.local
    existingSecret:
      secretName:  "{{ nextcloud_secret_name }}"
      usernameKey: nextclouddb-user
      passwordKey: nextclouddb-password
  postgresql:
    image:
      registry: docker.io
      repository: bitnami/postgresql
      tag: "{{ nextcloud_postgresql_image_tag }}"
    enabled: true
    existingSecret: "{{ nextcloud_secret_name }}"
    persistence:
      enabled: true
      existingClaim: "{{ nextcloud_postgresql_pvc_name }}"

# testen wie das ist
nextcloud_collabora_config:
  ',
        "richdocuments": {
                "wopi_url": "https:\/\/{{ item.collabora_url }}\/",
                "public_wopi_url": "https:\/\/{{ item.collabora_url }}",
                "types": "prevent_group_restriction",
                "enabled": "yes",
                "disable_certificate_verification": "",
                "doc_format": "",
                "use_groups": "",
                "installed_version": "6.2.1",
                "wopi_allowlist": ""
            }'
