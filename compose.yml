#Only for local testing. Will not be maintained actively.
version: "3"

services:
  nextcloud:
    build:
      context: .
      target: development
    container_name: nextcloud
    image: schulcloud/schulcloud-nextcloud/development
    restart: unless-stopped
    ports:
      - 8081:80
    expose:
      - 80
    environment:
      - VIRTUAL_HOST=nextcloud.localhost
    env_file:
      - .env
    volumes:
      - nextcloud:/var/www/html
      #- ../schulcloud-nextcloud-app:/var/www/html/custom_apps/schulcloud:ro
      #- ../NextcloudExtract:/var/www/html/custom_apps/extract:ro
      #- ../user_oidc:/var/www/html/custom_apps/user_oidc:ro
    depends_on:
      - db
      - storage
      - cache
      - antivirus

  storage:
    image: minio/minio:latest
    container_name: storage
    restart: unless-stopped
    ports:
      - 9100:9000
      - 9101:9001
    environment:
      - VIRTUAL_HOST=storage.localhost
      - MINIO_ROOT_USER=admin12345
      - MINIO_ROOT_PASSWORD=admin12345
    env_file:
      - .env
    command: 'server /data --console-address ":9001"'
    volumes:
      - /var/data/minio:/data

  createbuckets:
    image: minio/mc
    env_file:
      - .env
    depends_on:
      - storage
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://storage:9000 admin12345 admin12345;
      /usr/bin/mc mb myminio/nextcloud;
      /usr/bin/mc policy set public myminio/nextcloud;
      exit 0;
      "

  db:
    image: postgres
    restart: unless-stopped
    ports:
      - 5433:5432
    env_file:
      - .env
    volumes:
      - db:/var/lib/postgresql/data
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE

  cache:
    container_name: cache
    image: redis:alpine
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - cache:/data
    command: redis-server --requirepass ${REDIS_HOST_PASSWORD}

  antivirus:
    container_name: antivirus
    image: clamav/clamav:stable_base
    restart: unless-stopped
    ports:
      - 3310:3310
    volumes:
      # Socket
      - antivirus:/var/lib/clamav
      # Virus DB
      - /var/docker/clamav/virus_db/:/var/lib/clamav/

  # nginx here for simulate a ingress like in kubernetes
  nginx:
    container_name: nginx
    image: jwilder/nginx-proxy
    restart: always
    environment:
      - VIRTUAL_HOST=nginx.localhost
    ports:
      - 9090:80
      - 9443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./src/nginx.conf:/etc/nginx/conf.d/my_proxy.conf:ro

volumes:
  db:
  nextcloud:
  storage:
  antivirus:
  cache:

networks:
  default:
    name: schulcloudserver_schulcloud-server-network
